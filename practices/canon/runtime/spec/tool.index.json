{
  "tool.index": [
    {
      "id": "latency.validator",
      "payload_schema_ref": "runtime/spec/latency.validator_payload.json",
      "result_schema_ref": "runtime/spec/latency.validator_result.json",
      "mode": "fail_closed",
      "notes": "Runs on every call; enforces latency_mode and p50/p95 ceilings from kernel/90_policy_min.md."
    },

    /* ---- LENSES (microkernel) ---- */
    {
      "id": "lens.define",
      "payload_schema_ref": "runtime/schema/min/lens_define.min.json",
      "result_schema_ref": "runtime/spec/router_emission.json#/$defs/lens.define_result",
      "preconditions": ["meta_locus.accepted == true"]
    },
    {
      "id": "lens.check",
      "payload_schema_ref": "runtime/schema/min/lens_check.min.json",
      "result_schema_ref": "runtime/spec/router_emission.json#/$defs/lens.check_result",
      "preconditions": ["meta_locus.accepted == true"]
    },
    {
      "id": "lens.trace",
      "payload_schema_ref": "runtime/schema/min/lens_trace.min.json",
      "result_schema_ref": "runtime/spec/router_emission.json#/$defs/lens.trace_result",
      "preconditions": ["meta_locus.accepted == true"]
    },
    {
      "id": "lens.refuse",
      "payload_schema_ref": "runtime/schema/min/lens.refuse.min.json",
      "result_schema_ref": "runtime/spec/lens.refuse_result.json",
      "preconditions": ["meta_locus.accepted == true"]
    },

    /* ---- MICROMOVES (microkernel) ---- */
    {
      "id": "move.align_scan",
      "payload_schema_ref": "runtime/spec/move.align_scan_payload.json",
      "result_schema_ref": "runtime/spec/move.align_scan_result.json",
      "preconditions": ["meta_locus.accepted == true"]
    },
    {
      "id": "move.drift_check",
      "payload_schema_ref": "runtime/spec/move.drift_check_payload.json",
      "result_schema_ref": "runtime/spec/move.drift_check_result.json",
      "preconditions": ["meta_locus.accepted == true"]
    },
    {
      "id": "move.fracture",
      "payload_schema_ref": "runtime/spec/move.fracture_payload.json",
      "result_schema_ref": "runtime/spec/move.fracture_result.json",
      "preconditions": ["meta_locus.accepted == true"]
    },

    /* ---- GUARDIAN (microkernel) ---- */
    {
      "id": "guardian.trigger",
      "payload_schema_ref": "runtime/spec/guardian.trigger_payload.json",
      "result_schema_ref": "runtime/spec/guardian.trigger_result.json",
      "preconditions": ["meta_locus.accepted == true"]
    },
      {
      /* ---- RESULT SCHEMA REF ---- */
      "result_schema_ref": "spec/router_emission.json#/$defs/lens.define_result"
      "result_schema_ref": "spec/router_emission.json#/$defs/lens.check_result"
      "result_schema_ref": "spec/router_emission.json#/$defs/lens.trace_result"
      "result_schema_ref": "spec/router_emission.json#/$defs/lens.result_result"
      }
  ]
}
