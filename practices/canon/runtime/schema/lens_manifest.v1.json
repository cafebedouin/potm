{
  "$id": "potm.schema.lens_manifest.v1",
  "title": "Lens Manifest",
  "description": "Schema for declaring a PoTM lens list.",
  "type": "object",
  "required": ["id", "version", "lenses"],
  "properties": {
    "id": {
      "type": "string",
      "pattern": "^(pack|lens)\.[a-z0-9_.-]+$",              
      "description": "Stable pack identifier (e.g., pack.research or pack.somatic)."
    },
    "version": {
      "type": "string",
      "pattern": "^v?[0-9]+(\\.[0-9]+){0,2}(_[a-z0-9]+)?$",
      "description": "Semantic version of this lens manifest."
    },
    "display_title": {
      "type": "string",
      "description": "Human-facing title for practitioners."
    },
    "author": {
      "type": "string",
      "default": "practitioner"
    },
    "license": {
      "type": "string",
      "default": "CC0-1.0"
    },

    "lenses": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": ["id", "payload_schema_ref"],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^lens\\.[a-z0-9_.-]+$",
            "description": "Lens identifier, unique within the pack."
          },
          "payload_schema_ref": {
            "type": "string",
            "description": "Relative path to the payload schema (runtime/schema/...)."
          },
          "summary": {
            "type": "string",
            "description": "Short description of what this lens does."
          },
          "safety_notes": {
            "type": "array",
            "items": {"type": "string"},
            "description": "Optional notes on preconditions or safety gates."
          }
        }
      }
    },

    "compounds": {
      "type": "array",
      "description": "Optional list of compound lens manifests declared by this pack.",
      "items": {
        "type": "object",
        "required": ["id", "compound_manifest_ref"],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^compound\\.[a-z0-9_.-]+$",
            "description": "Compound identifier (e.g., compound.relational)."
          },
          "compound_manifest_ref": {
            "type": "string",
            "description": "Path to compound.manifest.json under extended/lenses/compounds/*/."
          }
        }
      }
    }
  },
  "additionalProperties": false
}
